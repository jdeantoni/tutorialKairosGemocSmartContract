/*
 * generated by Xtext 2.24.0
 */
package fr.inria.kairos.tuto.simplelanguage.xtext.formatting2

import com.google.inject.Inject
import fr.inria.kairos.tuto.simplelanguage.SmartContract
import fr.inria.kairos.tuto.simplelanguage.State
import fr.inria.kairos.tuto.simplelanguage.xtext.services.SmartContractMLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class SmartContractMLFormatter extends AbstractFormatter2 {
	
	@Inject extension SmartContractMLGrammarAccess

	def dispatch void format(SmartContract smartContract, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (event : smartContract.ownedEvents) {
			event.format
		}
		for (state : smartContract.ownedStates) {
			state.format
		}
		for (function : smartContract.ownedFunctions) {
			function.format
		}
	}

	def dispatch void format(State state, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (variable : state.ownedVariables) {
			variable.format
		}
	}
	
}
